// Monopropellant RCS
@PART:HAS[@MODULE[ModuleRCS*]:HAS[#resourceName[MonoPropellant],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer]]:BEFORE[zz_ChemicalPropulsion]
{
	@MODULE[ModuleRCS*]:HAS[#resourceName[MonoPropellant],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer],*
	{
		chemTechPropellant = Hydrazine
		chemTechPropellant = HTP
	}
}
@PART:HAS[@MODULE[ModuleRCS*]:HAS[@PROPELLANT[MonoPropellant],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer]]:BEFORE[zz_ChemicalPropulsion]
{
	@MODULE[ModuleRCS*]:HAS[@PROPELLANT[MonoPropellant],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer],*
	{
		chemTechPropellant = Hydrazine
		chemTechPropellant = HTP
	}
}

// Solid fuel RCS
@PART:HAS[@MODULE[ModuleRCS*]:HAS[#resourceName[SolidFuel],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer]]:BEFORE[zz_ChemicalPropulsion]
{
	@MODULE[ModuleRCS*]:HAS[#resourceName[SolidFuel],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer],*
	{
		chemTechPropellant = PBAN
		chemTechPropellant = HTPB
	}
}
@PART:HAS[@MODULE[ModuleRCS*]:HAS[@PROPELLANT[SolidFuel],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer]]:BEFORE[zz_ChemicalPropulsion]
{
	@MODULE[ModuleRCS*]:HAS[@PROPELLANT[SolidFuel],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer],*
	{
		chemTechPropellant = PBAN
		chemTechPropellant = HTPB
	}
}

// Assign hypergolic type to all unassigned bipropellant RCS
@PART:HAS[@MODULE[ModuleRCS*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[Oxidizer],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer]]:BEFORE[zz_ChemicalPropulsion]
{
	@MODULE[ModuleRCS*]:HAS[@PROPELLANT[LiquidFuel],@PROPELLANT[Oxidizer],~chemTechPropellant,~chemTechFuel,~chemTechOxidizer],*
	{
		chemTechFuel = Hydrazine
		chemTechFuel = Aniline
		chemTechOxidizer = NTO
		chemTechOxidizer = IWFNA
	}
}